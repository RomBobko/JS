üìò –û—Å–Ω–æ–≤–Ω—ñ –º–µ—Ç–æ–¥–∏ —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó JavaScript



// üîπ –ú–∞—Å–∏–≤–∏

.push() ‚Äì –¥–æ–¥–∞—î –µ–ª–µ–º–µ–Ω—Ç —É –∫—ñ–Ω–µ—Ü—å

.pop() ‚Äì –≤–∏–¥–∞–ª—è—î –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç

.shift() ‚Äì –≤–∏–¥–∞–ª—è—î –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç

.unshift() ‚Äì –¥–æ–¥–∞—î –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ –ø–æ—á–∞—Ç–æ–∫

.slice(start, end) ‚Äì –∫–æ–ø—ñ—è —á–∞—Å—Ç–∏–Ω–∏ –º–∞—Å–∏–≤—É (–Ω–µ –∑–º—ñ–Ω—é—î –æ—Ä–∏–≥—ñ–Ω–∞–ª)

.splice(start, deleteCount, ...items) ‚Äì –≤–∏—Ä—ñ–∑–∞—î/–¥–æ–¥–∞—î –µ–ª–µ–º–µ–Ω—Ç–∏ (–∑–º—ñ–Ω—é—î –æ—Ä–∏–≥—ñ–Ω–∞–ª)

.concat(arr2) ‚Äì –æ–± º—î–¥–Ω–∞–Ω–Ω—è –º–∞—Å–∏–≤—ñ–≤

.indexOf(value) ‚Äì –∑–Ω–∞—Ö–æ–¥–∏—Ç—å —ñ–Ω–¥–µ–∫—Å –µ–ª–µ–º–µ–Ω—Ç–∞

.includes(value) ‚Äì —á–∏ —î –µ–ª–µ–º–µ–Ω—Ç —É –º–∞—Å–∏–≤—ñ

.forEach(callback) ‚Äì –ø–µ—Ä–µ–±—ñ—Ä –µ–ª–µ–º–µ–Ω—Ç—ñ–≤

.map(callback) ‚Äì –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ —ñ–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏

.filter(callback) ‚Äì —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è

.find(callback) ‚Äì –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç, —â–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å

.reduce(callback, init) ‚Äì –∑–≤–µ–¥–µ–Ω–Ω—è –¥–æ –æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è

.some(callback) ‚Äì —á–∏ —î —Ö–æ—á –æ–¥–∏–Ω –µ–ª–µ–º–µ–Ω—Ç, —â–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å

.every(callback) ‚Äì —á–∏ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å —É–º–æ–≤—ñ

.sort(callback) ‚Äì —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è

.reverse() ‚Äì —Ä–æ–∑–≤–æ—Ä–æ—Ç –º–∞—Å–∏–≤—É

.join(sep) ‚Äì –º–∞—Å–∏–≤ ‚Üí —Ä—è–¥–æ–∫

.flat(depth) ‚Äì ‚Äú—Ä–æ–∑–ø–ª—é—â—É—î‚Äù –≤–∫–ª–∞–¥–µ–Ω—ñ –º–∞—Å–∏–≤–∏



// üîπ –†—è–¥–∫–∏

.length ‚Äì –¥–æ–≤–∂–∏–Ω–∞ —Ä—è–¥–∫–∞

.toUpperCase() / .toLowerCase() ‚Äì –∑–º—ñ–Ω–∞ —Ä–µ–≥—ñ—Å—Ç—Ä—É

.includes(substr) ‚Äì —á–∏ —î –ø—ñ–¥—Ä—è–¥–æ–∫

.indexOf(substr) ‚Äì —ñ–Ω–¥–µ–∫—Å –ø—ñ–¥—Ä—è–¥–∫–∞

.startsWith(substr) / .endsWith(substr) ‚Äì –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—á–∞—Ç–∫—É/–∫—ñ–Ω—Ü—è

.slice(start, end) ‚Äì –≤–∏—Ä—ñ–∑–∞—Ç–∏ —á–∞—Å—Ç–∏–Ω—É —Ä—è–¥–∫–∞

.substring(start, end) ‚Äì —Ç–µ–∂ –≤–∏—Ä—ñ–∑–∫–∞ (–∞–ª–µ —Ç—Ä–æ—Ö–∏ —ñ–Ω—à–∞ –ª–æ–≥—ñ–∫–∞)

.substr(start, length) ‚Äì (–∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–π, –∞–ª–µ –∑—É—Å—Ç—Ä—ñ—á–∞—î—Ç—å—Å—è)

.split(delimiter) ‚Äì —Ä—è–¥–æ–∫ ‚Üí –º–∞—Å–∏–≤

.trim() ‚Äì –æ–±—Ä—ñ–∑–∞—î –ø—Ä–æ–±—ñ–ª–∏ –Ω–∞ –ø–æ—á–∞—Ç–∫—É —ñ –≤ –∫—ñ–Ω—Ü—ñ

.replace(from, to) ‚Äì –∑–∞–º—ñ–Ω—è—î –ø–µ—Ä—à–∏–π –∑–±—ñ–≥

.replaceAll(from, to) ‚Äì –∑–∞–º—ñ–Ω—è—î –≤—Å—ñ –∑–±—ñ–≥–∏



// üîπ –ß–∏—Å–ª–∞ —Ç–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞

parseInt("42") ‚Äì —Ä–æ–±–∏—Ç—å —Ü—ñ–ª–µ —á–∏—Å–ª–æ

parseFloat("3.14") ‚Äì —Ä–æ–±–∏—Ç—å —á–∏—Å–ª–æ –∑ –∫—Ä–∞–ø–∫–æ—é

Number("123") ‚Äì –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î –Ω–∞ —á–∏—Å–ª–æ

.toFixed(n) ‚Äì –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è –¥–æ n –∑–Ω–∞–∫—ñ–≤ –ø—ñ—Å–ª—è –∫—Ä–∞–ø–∫–∏

isNaN(value) ‚Äì —á–∏ –Ω–µ —î –∑–Ω–∞—á–µ–Ω–Ω—è —á–∏—Å–ª–æ–º

Math

Math.random() ‚Äì –≤–∏–ø–∞–¥–∫–æ–≤–µ —á–∏—Å–ª–æ –≤—ñ–¥ 0 –¥–æ 1

Math.floor(x) ‚Äì –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è –≤–Ω–∏–∑

Math.ceil(x) ‚Äì –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è –≤–≥–æ—Ä—É

Math.round(x) ‚Äì –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è –¥–æ –Ω–∞–π–±–ª–∏–∂—á–æ–≥–æ

Math.max(a, b, c‚Ä¶) ‚Äì –Ω–∞–π–±—ñ–ª—å—à–µ —á–∏—Å–ª–æ

Math.min(a, b, c‚Ä¶) ‚Äì –Ω–∞–π–º–µ–Ω—à–µ —á–∏—Å–ª–æ

Math.pow(x, y) ‚Äì –ø—ñ–¥–Ω–µ—Å—Ç–∏ –¥–æ —Å—Ç–µ–ø–µ–Ω—è

Math.sqrt(x) ‚Äì –∫–≤–∞–¥—Ä–∞—Ç–Ω–∏–π –∫–æ—Ä—ñ–Ω—å

Math.abs(x) ‚Äì –º–æ–¥—É–ª—å —á–∏—Å–ª–∞



// üîπ –û–±‚Äô—î–∫—Ç–∏

Object.keys(obj) ‚Äì –º–∞—Å–∏–≤ –∫–ª—é—á—ñ–≤

Object.values(obj) ‚Äì –º–∞—Å–∏–≤ –∑–Ω–∞—á–µ–Ω—å

Object.entries(obj) ‚Äì –º–∞—Å–∏–≤ –ø–∞—Ä [key, value]

Object.assign(target, source) ‚Äì –∫–æ–ø—ñ—é—î –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ

structuredClone(obj) ‚Äì –≥–ª–∏–±–æ–∫–µ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è (—Å—É—á–∞—Å–Ω–∏–π —Å–ø–æ—Å—ñ–±)

Spread ...obj ‚Äì –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è/–æ–±‚Äô—î–¥–Ω–∞–Ω–Ω—è

–î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è { name } = obj ‚Äì —à–≤–∏–¥–∫–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–ª—ñ–≤